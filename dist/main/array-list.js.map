{"version":3,"sources":["../../src/main/array-list.ts"],"names":[],"mappings":"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","file":"array-list.js","sourcesContent":["import { List } from \"./list\";\nimport { Collection } from \"./collection\";\nimport { ArrayIterator } from \"./array-iterator\";\n\nexport class ArrayList<E> implements List<E> {\n\n    private array: E[];\n\n    public constructor(array: E[] = []) {\n        this.array = array;\n    }\n\n    public add(e: E): boolean {\n        this.array.push(e);\n        return true;\n    }\n\n    public addAll(c: Collection<E>): boolean {\n        if (c.isEmpty()) {\n            return false;\n        } else {\n            this.array.concat(c.toArray());\n            return true;\n        }\n    }\n\n    public addAllAt(index: number, c: Collection<E>): boolean {\n        if (c.isEmpty) {\n            return false;\n        } else {\n            let args: any[] = [index, 0];\n            args.concat(c.toArray());\n            Array.prototype.splice.apply(this.array, args);\n            return true;\n        }\n    }\n\n    public addAt(index: number, element: E): void {\n        this.array.splice(index, 0, element);\n    }\n\n    public clear(): void {\n        this.array.length = 0;\n    }\n\n    public contains(e: E): boolean {\n        return this.array.indexOf(e) >= 0;\n    }\n\n    public containsAll(c: Collection<E>): boolean {\n        for (let e of c.toArray()) {\n            if (!this.contains(e)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public get(index: number): E {\n        return this.array[index];\n    }\n\n    public indexOf(e: E): number {\n        return this.array.indexOf(e);\n    }\n\n    public isEmpty(): boolean {\n        return this.array.length == 0;\n    }\n\n    public iterator(): ArrayIterator<E> {\n        return new ArrayIterator<E>(this.array);\n    }\n\n    public lastIndexOf(e: E): number {\n        return this.array.lastIndexOf(e);\n    }\n\n    public remove(e: E): boolean {\n        if (this.contains(e)) {\n            this.array.splice(this.array.indexOf(e), 1);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public removeAll(c: Collection<E>): boolean {\n        let removed = false;\n        for (let e of c.toArray()) {\n            removed = removed || this.remove(e);\n        }\n        return removed;\n    }\n\n    public removeAt(index: number): E {\n        return this.array.splice(index, 1)[0];\n    }\n\n    public retainAll(c: Collection<E>): boolean {\n        let remove = this.array.filter(e => !c.contains(e));\n        let changed = false;\n        for (let e of remove) {\n            changed = changed || this.remove(e) != null;\n        }\n        return changed;\n    }\n\n    public set(index: number, element: E): E {\n        return this.array.splice(index, 1, element)[0];\n    }\n\n    public size(): number {\n        return this.array.length;\n    }\n\n    public subList(fromIndex: number, toIndex: number): ArrayList<E> {\n        return new ArrayList<E>(this.array.slice(fromIndex, toIndex));\n    }\n\n    public toArray(): E[] {\n        return this.array.slice();\n    }\n\n    public toJSON(): any {\n        return this.array;\n    }\n\n}\n"]}